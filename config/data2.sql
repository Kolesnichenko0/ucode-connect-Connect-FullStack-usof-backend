USE dkolesnych_solve_stack_db_production;

INSERT INTO users (login, password, full_name, email, email_verified, profile_picture_name, role)
VALUES
('tech_guru92', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'John Doe', 'john.doe@gmail.com', b'1', 'default-avatar.png', 'user'),
('jane_dev', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Jane Smith', 'jane.smith@gmail.com', b'1', 'default-avatar.png', 'user'),
('alice_admin', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Alice Admin', 'alice.admin@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png' , 'admin'),
('bob_the_builder', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Bob Brown', 'bob.brown@gmail.com', b'1', 'default-avatar.png', 'user'),
('charlie_green', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Charlie Green', 'charlie.green@gmail.com', b'1', '04ce9bdc-ae08-480b-8ea1-14a2d031971d.png' ,'user'),
('dave_admin', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Dave Admin', 'dave.admin@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png' , 'admin'),
('emma_coder', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Emma White', 'emma.white@gmail.com', b'1', '7f7f9ed5-337a-4c98-9ffd-f2e397d87af6.png', 'user'),
('frank_black', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Frank Black', 'frank.black@gmail.com', b'1', '0350d3e2-a613-46c2-8b49-336d0d3bb537.png' , 'user'),
('grace_blue', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Grace Blue', 'grace.blue@gmail.com', b'1', 'b0e97330-0482-46f4-8020-56edb594f3c9.png' , 'user'),
('henry_dev', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Henry Yellow', 'den.koleskos@gmail.com', b'1', 'fd976a04-bf88-4fa7-80e2-6ab9b79b7612.png' , 'admin'),
('ivy_tester', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Ivy Green', 'denis.kolesnichenko112@gmail.com', b'1', 'default-avatar.png' ,'user'),
('jack_fullstack', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Jack Brown', 'jack.brown@gmail.com', b'1', 'default-avatar.png', 'user'),
('karen_backend', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Karen White', 'karen.white@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('leo_frontend', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Leo Gray', 'leo.gray@gmail.com', b'1', 'default-avatar.png','user'),
('mia_designer', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Mia Black', 'mia.black@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('code_ninja', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Nina Coder', 'nina.coder@gmail.com', b'1', 'default-avatar.png', 'user'),
('data_wizard', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'David Wizard', 'david.wizard@gmail.com', b'1', 'default-avatar.png', 'user'),
('ai_enthusiast', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Anna Intel', 'anna.intel@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('cloud_surfer', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Chris Cloud', 'chris.cloud@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png', 'user'),
('security_sentinel', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Sarah Secure', 'sarah.secure@gmail.com', b'1', 'default-avatar.png', 'user'),
('mobile_maestro', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Mike Mobile', 'mike.mobile@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('ux_unicorn', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Uma UX', 'uma.ux@gmail.com', b'1', 'default-avatar.png', 'user'),
('devops_dynamo', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Derek DevOps', 'derek.devops@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('quantum_quester', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Quincy Quantum', 'quincy.quantum@gmail.com', b'1', 'default-avatar.png', 'user'),
('blockchain_buff', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Bella Blockchain', 'bella.blockchain@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png', 'user'),
('ml_maverick', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Max ML', 'max.ml@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png', 'user'),
('iot_innovator', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Ivy IoT', 'ivy.iot@gmail.com', b'1', '7f7f9ed5-337a-4c98-9ffd-f2e397d87af6.png', 'user'),
('game_dev_guru', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Gary GameDev', 'gary.gamedev@gmail.com', b'1', 'default-avatar.png', 'user'),
('ar_architect', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Alice AR', 'alice.ar@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('vr_virtuoso', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Victor VR', 'victor.vr@gmail.com', b'1', 'default-avatar.png', 'user'),
('crypto_coder', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Cynthia Crypto', 'cynthia.crypto@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('embedded_expert', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Ethan Embedded', 'ethan.embedded@gmail.com', b'1', '0ba5c307-25ef-48f7-9369-ac9afb44c3e0.png', 'user'),
('network_ninja', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Nora Network', 'nora.network@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png', 'user'),
('robotics_rockstar', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Robert Robotics', 'robert.robotics@gmail.com', b'1', 'default-avatar.png', 'user'),
('cyber_sleuth', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Chloe Cyber', 'chloe.cyber@gmail.com', b'1', 'default-avatar.png', 'user'),
('data_detective', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Dexter Data', 'dexter.data@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png', 'user'),
('api_ace', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Amelia API', 'amelia.api@gmail.com', b'1', '7f7f9ed5-337a-4c98-9ffd-f2e397d87af6.png', 'user'),
('linux_lord', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Liam Linux', 'liam.linux@gmail.com', b'1', '6aec2dbc-a8e4-4a5a-881c-9f345caeb695.png', 'user'),
('agile_ace', '$2b$10$5eJSA7JvPSHkj3krYfIzHOTwDWVFzCuKO527UuLQtfZyli6CruqRe', 'Abby Agile', 'abby.agile@gmail.com', b'1', '7f7f9ed5-337a-4c98-9ffd-f2e397d87af6.png', 'user');

INSERT INTO posts (user_id, title, status, content)
VALUES
(1, 'How can I improve my Python skills?', 'active', '<p>I\'ve been learning Python for a few months but feel stuck. Any tips on resources or projects I should try to take my skills to the next level?</p><ul><li>Online courses I\'ve tried</li><li>Books I\'ve read</li><li>Small projects I\'ve completed</li></ul><p>I\'m particularly interested in data analysis and web development with Python. Any guidance would be appreciated!</p>'),
(2, 'What are the best JavaScript frameworks for beginners?', 'active', '<h2>JavaScript Frameworks for Beginners</h2><p>I\'m new to web development and want to know which JavaScript frameworks are beginner-friendly. I\'ve heard about React, Vue, and Angular, but I\'m not sure where to start.</p><ol><li>React</li><li>Vue.js</li><li>Angular</li><li>Svelte</li></ol><p>What are the pros and cons of each for a beginner? Which one has the best learning resources?</p>'),
(3, 'Can someone explain SQL joins to me?', 'active', '<h3>SQL Joins Explained</h3><p>I\'m having a hard time understanding how SQL joins work. Can anyone provide a clear explanation with some practical examples?</p><pre><code>SELECT * FROM table1 JOIN table2 ON table1.id = table2.id;</code></pre><p>I\'m particularly confused about the differences between INNER JOIN, LEFT JOIN, RIGHT JOIN, and FULL OUTER JOIN. A visual explanation would be really helpful!</p>'),
(4, 'Help with Java memory management issues', 'active', '<h2>Java Memory Management Issues</h2><p>I keep facing memory management problems in Java. How can I tackle this effectively? Are there any best practices or tools I should be aware of?</p><ul><li>Heap vs Stack</li><li>Garbage Collection</li><li>Memory Leaks</li><li>OutOfMemoryError</li></ul><p>I\'d appreciate any tips on profiling tools or techniques to identify and resolve these issues.</p>'),
(5, 'How do I get started with React?', 'active', '<h1>Getting Started with React</h1><p>I want to learn React but don\'t know where to begin. Any suggestions for good tutorials or courses? What prerequisites should I have before diving in?</p><ol><li>JavaScript fundamentals</li><li>ES6 features</li><li>Basic HTML and CSS</li></ol><p>Are there any specific projects you\'d recommend for a beginner to build while learning React?</p>'),
(5, 'What is Docker and how can it help me?', 'active', '<h2>Understanding Docker and Its Benefits</h2><p>I\'ve heard a lot about Docker but don\'t really understand what it is or how to use it. Can someone explain its benefits and provide some use cases?</p><ul><li>What exactly is containerization?</li><li>How does Docker differ from virtual machines?</li><li>What are the main advantages of using Docker?</li><li>Are there any specific industries or project types where Docker excels?</li></ul><p>I\'d appreciate any real-world examples or beginner-friendly resources to help me get started with Docker.</p>'),
(7, 'Is cloud computing worth the investment?', 'active', '<h2>Evaluating Cloud Computing for Projects</h2><p>I\'m considering cloud services for my projects. Is it worth the cost? What are the pros and cons compared to traditional hosting?</p><table><tr><th>Cloud Computing</th><th>Traditional Hosting</th></tr><tr><td>Scalability</td><td>Fixed Resources</td></tr><tr><td>Pay-as-you-go</td><td>Fixed Costs</td></tr></table><p>I\'m particularly interested in:</p><ol><li>Cost comparisons for different project sizes</li><li>Performance differences</li><li>Security considerations</li><li>Ease of management and deployment</li></ol><p>Has anyone made the switch from traditional hosting to cloud? What was your experience?</p>'),
(8, 'Can someone simplify blockchain technology for me?', 'active', '<h2>Demystifying Blockchain Technology</h2><p>I find blockchain confusing. Can anyone break it down in simple terms? How is it different from traditional databases?</p><h3>Key Concepts:</h3><ul><li>Decentralization</li><li>Immutability</li><li>Transparency</li><li>Consensus Mechanisms</li></ul><p>I\'d appreciate explanations that don\'t assume a deep technical background. Also, are there any good visual resources that explain blockchain?</p><h3>Questions:</h3><ol><li>What problems does blockchain solve?</li><li>What are some non-cryptocurrency applications of blockchain?</li><li>How does blockchain ensure security and trust?</li></ol>'),
(9, 'What are the advantages of Test-Driven Development?', 'active', '<h2>Understanding the Benefits of Test-Driven Development (TDD)</h2><p>I\'ve heard about TDD, but what are its actual benefits in real-world applications? How do I start implementing it in my workflow?</p><h3>Potential Advantages:</h3><ul><li>Improved code quality</li><li>Better design and architecture</li><li>Easier refactoring</li><li>Built-in documentation</li></ul><p>I\'m looking for concrete examples of how TDD has improved projects or development processes. Also, any tips for overcoming the initial hurdles when adopting TDD would be greatly appreciated.</p><h3>Getting Started:</h3><ol><li>How to write effective test cases?</li><li>Recommended tools and frameworks for TDD?</li><li>Balancing TDD with development speed?</li><li>Applying TDD to legacy code?</li></ol>'),
(10, 'Which Python libraries are essential for data science?', 'active', '<h2>Essential Python Libraries for Data Science</h2><p>I want to delve into data science using Python. Which libraries should I focus on learning first? Any recommendations for good resources?</p><h3>Popular Libraries:</h3><ul><li>NumPy</li><li>Pandas</li><li>Matplotlib</li><li>Scikit-learn</li><li>TensorFlow or PyTorch</li></ul><p>I\'m looking for explanations of what each library is best used for, and possibly some simple code examples to get started.</p><h3>Learning Path:</h3><ol><li>Which order should I learn these libraries in?</li><li>Are there any good online courses or books you\'d recommend?</li><li>How can I practice using these libraries with real-world datasets?</li><li>Any tips for transitioning from data analysis to machine learning?</li></ol>'),
(11, 'How to optimize database queries for large datasets?', 'active', '<h2>Optimizing Database Queries for Large Datasets</h2><p>I\'m working with a database that has millions of records. What are some strategies to optimize my queries and improve performance?</p><h3>Areas to Consider:</h3><ul><li>Indexing strategies</li><li>Query optimization techniques</li><li>Database design considerations</li><li>Caching mechanisms</li></ul><p>I\'d appreciate both general tips and specific techniques for different types of databases (e.g., MySQL, PostgreSQL, Oracle).</p><h3>Specific Questions:</h3><ol><li>How do I identify slow queries in my application?</li><li>What tools can I use for query analysis and optimization?</li><li>Are there any query patterns I should avoid with large datasets?</li><li>How does database partitioning help with large datasets?</li></ol>'),
(12, 'Best practices for securing a REST API', 'inactive', '<h2>Securing REST APIs: Best Practices</h2><p>I\'m developing a REST API and want to ensure it\'s secure. What are the best practices for authentication, authorization, and data protection?</p><h3>Key Security Aspects:</h3><ul><li>Authentication methods (e.g., JWT, OAuth)</li><li>Authorization and role-based access control</li><li>HTTPS implementation</li><li>Input validation and sanitization</li><li>Rate limiting and DDoS protection</li></ul><p>I\'m particularly interested in real-world examples and common pitfalls to avoid.</p><h3>Implementation Questions:</h3><ol><li>What are the pros and cons of different authentication methods?</li><li>How should I handle API keys and secrets securely?</li><li>Are there any good security testing tools for REST APIs?</li><li>How can I ensure my API remains secure over time?</li></ol>'),
(13, 'Comparing NoSQL databases: MongoDB vs. Cassandra', 'active', '<h2>MongoDB vs. Cassandra: Choosing the Right NoSQL Database</h2><p>I\'m trying to choose between MongoDB and Cassandra for a new project. Can someone explain the pros and cons of each? Which scenarios are they best suited for?</p><table><tr><th>Feature</th><th>MongoDB</th><th>Cassandra</th></tr><tr><td>Data Model</td><td>Document-oriented</td><td>Wide-column store</td></tr><tr><td>Scalability</td><td>Horizontal</td><td>Linear scalability</td></tr><tr><td>Use Cases</td><td>?</td><td>?</td></tr></table><p>I\'d appreciate insights on:</p><ul><li>Performance characteristics</li><li>Ease of use and learning curve</li><li>Community support and ecosystem</li><li>Specific strengths and weaknesses</li></ul><p>Has anyone used both in production? What were your experiences?</p>'),
(14, 'Tips for writing clean and maintainable code', 'active', '<h2>Writing Clean and Maintainable Code: Best Practices</h2><p>I want to improve the quality of my code. What are some tips and best practices for writing clean, maintainable, and easily understandable code?</p><h3>Key Principles:</h3><ul><li>DRY (Don\'t Repeat Yourself)</li><li>SOLID principles</li><li>Meaningful naming conventions</li><li>Proper code organization and structure</li><li>Effective commenting and documentation</li></ul><p>I\'m looking for practical examples and maybe before/after comparisons to illustrate these concepts.</p><h3>Specific Areas of Interest:</h3><ol><li>How to balance code readability with performance?</li><li>Tips for writing self-documenting code</li><li>Best practices for error handling and logging</li><li>How to approach refactoring legacy code?</li></ol><p>Any recommended books or resources on this topic would also be greatly appreciated!</p>'),
(15, 'How to implement CI/CD in a small team?', 'inactive', '<h2>Implementing CI/CD in a Small Team</h2><p>Our small development team wants to implement CI/CD. What are some lightweight tools and practices we can start with? Any gotchas to watch out for?</p><h3>Key Components:</h3><ul><li>Version control best practices</li><li>Automated testing</li><li>Build automation</li><li>Deployment strategies</li></ul><p>We\'re particularly interested in solutions that don\'t require a huge upfront investment in time or resources.</p><h3>Specific Questions:</h3><ol><li>What are some good CI/CD tools for small teams?</li><li>How can we gradually introduce CI/CD practices?</li><li>What metrics should we track to measure the effectiveness of our CI/CD pipeline?</li><li>How do we handle database changes in a CI/CD workflow?</li></ol><p>Any experiences or case studies from other small teams who\'ve successfully implemented CI/CD would be incredibly helpful!</p>'),
(1, 'Understanding RESTful API Design', 'active', '<h2>RESTful API Design Principles</h2><p>I\'m trying to design my first RESTful API and want to ensure I\'m following best practices. Can someone explain the key principles of RESTful design?</p><ul><li>Resource naming conventions</li><li>HTTP methods (GET, POST, PUT, DELETE)</li><li>Status codes</li><li>Authentication methods</li></ul><p>Are there any tools or frameworks you\'d recommend for building and documenting RESTful APIs?</p>'),
(2, 'Machine Learning: Where to Start?', 'active', '<h1>Getting Started with Machine Learning</h1><p>I\'m a software developer looking to transition into machine learning. Where should I start?</p><ol><li>Mathematics prerequisites</li><li>Programming languages (Python? R?)</li><li>Key algorithms to learn</li><li>Recommended courses or books</li></ol><p>I\'d also love to hear about your journey into machine learning and any advice you have for beginners.</p>'),
(3, 'Microservices vs Monolithic Architecture', 'active', '<h2>Choosing Between Microservices and Monolithic Architecture</h2><p>I\'m designing a new application and trying to decide between a microservices architecture and a monolithic one. What are the pros and cons of each?</p><table><tr><th>Microservices</th><th>Monolithic</th></tr><tr><td>Scalability</td><td>Simplicity</td></tr><tr><td>Technology Diversity</td><td>Easier Deployment</td></tr></table><p>In what scenarios would you recommend one over the other?</p>'),
(4, 'Securing Web Applications: Best Practices', 'active', '<h1>Web Application Security Best Practices</h1><p>As cyber threats continue to evolve, what are the current best practices for securing web applications?</p><ul><li>HTTPS implementation</li><li>Cross-Site Scripting (XSS) prevention</li><li>SQL injection protection</li><li>Authentication and authorization</li></ul><p>Are there any security frameworks or tools you\'d recommend for different programming languages or frameworks?</p>'),
(5, 'Optimizing Database Performance', 'active', '<h2>Strategies for Database Performance Optimization</h2><p>I\'m working on a project with a large database, and queries are starting to slow down. What strategies can I use to optimize database performance?</p><ol><li>Indexing best practices</li><li>Query optimization techniques</li><li>Caching strategies</li><li>Database scaling options</li></ol><p>Has anyone had experience with database sharding or read replicas? I\'d love to hear about real-world implementations.</p>'),
(6, 'Containerization with Docker: Tips and Tricks', 'active', '<h2>Docker Containerization Best Practices</h2><p>I\'ve started using Docker for my projects, but I feel like I\'m not using it to its full potential. What are some advanced tips and tricks for Docker?</p><ul><li>Optimizing Dockerfiles</li><li>Multi-stage builds</li><li>Docker Compose for complex applications</li><li>Docker networking</li></ul><p>I\'d also love to hear about your experiences with orchestration tools like Kubernetes.</p>'),
(7, 'Frontend Performance Optimization Techniques', 'active', '<h1>Boosting Frontend Performance</h1><p>What are the latest techniques for optimizing frontend performance? I want to ensure my web applications are as fast and responsive as possible.</p><ol><li>Lazy loading</li><li>Code splitting</li><li>Caching strategies</li><li>Image optimization</li></ol><p>Are there any tools you recommend for measuring and monitoring frontend performance?</p>'),
(8, 'Implementing Authentication in Single Page Applications', 'active', '<h2>SPA Authentication Strategies</h2><p>I\'m building a Single Page Application (SPA) and need to implement user authentication. What are the best practices for SPA authentication?</p><ul><li>JWT vs. session-based auth</li><li>OAuth 2.0 and OpenID Connect</li><li>Handling token storage and renewal</li><li>CSRF protection in SPAs</li></ul><p>Has anyone implemented passwordless authentication in an SPA? I\'d be interested in hearing about your experience.</p>'),
(9, 'Serverless Architecture: Pros and Cons', 'active', '<h1>Exploring Serverless Architecture</h1><p>I\'m considering moving some of our services to a serverless architecture. What are the main advantages and disadvantages of going serverless?</p><table><tr><th>Pros</th><th>Cons</th></tr><tr><td>Scalability</td><td>Cold Starts</td></tr><tr><td>Cost-effective</td><td>Vendor Lock-in</td></tr></table><p>If you\'ve migrated to serverless, what challenges did you face and how did you overcome them?</p>'),
(10, 'GraphQL vs REST: When to Use Which?', 'active', '<h2>Choosing Between GraphQL and REST</h2><p>I\'m designing a new API and trying to decide between GraphQL and REST. In what scenarios would you recommend one over the other?</p><ul><li>Data fetching efficiency</li><li>Learning curve</li><li>Caching</li><li>Versioning</li></ul><p>For those who have used both, what were the main differences in terms of development experience and client-side integration?</p>'),
(11, 'Implementing Microservices with Spring Boot', 'active', '<h1>Building Microservices using Spring Boot</h1><p>I\'m planning to build a microservices-based application using Spring Boot. What are some best practices and common pitfalls to avoid?</p><ol><li>Service discovery</li><li>Inter-service communication</li><li>Centralized configuration</li><li>Distributed tracing</li></ol><p>Has anyone used Spring Cloud? How does it compare to other microservices frameworks?</p>'),
(12, 'Machine Learning Model Deployment Strategies', 'active', '<h2>Deploying Machine Learning Models in Production</h2><p>What are the best practices for deploying machine learning models in a production environment? I\'m particularly interested in strategies for model versioning and A/B testing.</p><ul><li>Containerization of ML models</li><li>Model serving frameworks</li><li>Monitoring model performance</li><li>Handling model updates</li></ul><p>If you\'ve deployed ML models at scale, what challenges did you face and how did you address them?</p>'),
(13, 'Implementing Real-time Features with WebSockets', 'active', '<h1>Building Real-time Applications with WebSockets</h1><p>I want to add real-time features to my web application. What are the best practices for implementing WebSockets?</p><ol><li>Choosing a WebSocket library</li><li>Scaling WebSocket connections</li><li>Handling connection drops</li><li>Security considerations</li></ol><p>Has anyone compared WebSockets to other real-time technologies like Server-Sent Events or Long Polling?</p>'),
(14, 'Blockchain Development: Where to Start?', 'active', '<h2>Getting Started with Blockchain Development</h2><p>I\'m interested in blockchain development but don\'t know where to begin. What languages and tools should I focus on?</p><ul><li>Ethereum and Solidity</li><li>Hyperledger Fabric</li><li>Smart contract development</li><li>Decentralized application (DApp) architectures</li></ul><p>Are there any good resources or courses you\'d recommend for someone new to blockchain development?</p>'),
(15, 'Best Practices for Code Review', 'active', '<h1>Effective Code Review Techniques</h1><p>What are your best practices for conducting effective code reviews? I want to ensure our team is getting the most out of our review process.</p><ol><li>Automated checks vs. manual review</li><li>Code review checklists</li><li>Giving constructive feedback</li><li>Handling disagreements</li></ol><p>How do you balance thoroughness with keeping the development process moving quickly?</p>'),
(1, 'Implementing CI/CD for Mobile App Development', 'active', '<h2>CI/CD Pipelines for Mobile Apps</h2><p>I\'m looking to set up a CI/CD pipeline for our mobile app development. What are some recommended tools and best practices?</p><ul><li>iOS vs. Android considerations</li><li>Automated testing for mobile apps</li><li>Beta distribution</li><li>App store submission automation</li></ul><p>If you\'ve implemented CI/CD for mobile apps, what were the main challenges you faced?</p>'),
(2, 'Securing Microservices Architecture', 'active', '<h1>Security in Microservices</h1><p>What are the key security considerations when implementing a microservices architecture? How do they differ from monolithic application security?</p><ol><li>Service-to-service authentication</li><li>API gateways and security</li><li>Secrets management</li><li>Monitoring and logging in distributed systems</li></ol><p>Has anyone implemented a zero-trust security model in a microservices environment?</p>'),
(3, 'Optimizing React Application Performance', 'active', '<h2>React Performance Optimization Techniques</h2><p>I\'m working on a large-scale React application and noticing some performance issues. What are some effective ways to optimize React app performance?</p><ul><li>Memoization techniques</li><li>Virtual DOM optimization</li><li>Code splitting and lazy loading</li><li>State management optimization</li></ul><p>Are there any tools you recommend for profiling and identifying performance bottlenecks in React apps?</p>'),
(4, 'Implementing Event-Driven Architecture', 'active', '<h1>Building Event-Driven Systems</h1><p>I\'m interested in implementing an event-driven architecture for our next project. What are the key principles and best practices to follow?</p><ol><li>Choosing a message broker</li><li>Event schema design</li><li>Handling event ordering and idempotency</li><li>Error handling and dead letter queues</li></ol><p>If you\'ve built event-driven systems, what were the main benefits and challenges you encountered?</p>'),
(5, 'Machine Learning for Natural Language Processing', 'active', '<h2>Getting Started with NLP and Machine Learning</h2><p>I want to explore machine learning techniques for natural language processing. Where should I start, and what are some good projects for beginners?</p><ul><li>Key NLP concepts</li><li>Popular NLP libraries</li><li>Pre-trained models vs. training from scratch</li><li>Ethical considerations in NLP</li></ul><p>Has anyone worked on interesting NLP projects they\'d like to share?</p>'),
(6, 'Implementing Dark Mode in Web Applications', 'active', '<h1>Dark Mode Implementation Strategies</h1><p>What are the best practices for implementing dark mode in web applications? I want to ensure a smooth transition and maintain accessibility.</p><ol><li>CSS variables vs. separate stylesheets</li><li>Handling user preferences</li><li>Image and media considerations</li><li>Testing dark mode implementations</li></ol><p>Have you implemented dark mode in a large-scale application? What challenges did you face?</p>'),
(7, 'Scaling PostgreSQL for High Traffic Applications', 'active', '<h2>PostgreSQL Scaling Techniques</h2><p>Our application is experiencing rapid growth, and we need to scale our PostgreSQL database. What are some effective strategies for scaling PostgreSQL?</p><ul><li>Read replicas and load balancing</li><li>Partitioning and sharding</li><li>Connection pooling</li><li>Query optimization for scale</li></ul><p>Has anyone successfully implemented a multi-master PostgreSQL setup? I\'d love to hear about your experience.</p>'),
(8, 'Implementing OAuth 2.0 and OpenID Connect', 'active', '<h1>OAuth 2.0 and OpenID Connect Integration</h1><p>I\'m implementing authentication for a new application and want to use OAuth 2.0 and OpenID Connect. What are the best practices and common pitfalls to avoid?</p><ol><li>Choosing the right OAuth 2.0 flow</li><li>Implementing PKCE for mobile and SPA clients</li><li>Handling token storage and renewal</li><li>Integrating with popular identity providers</li></ol><p>Are there any good libraries or tools you recommend for OAuth 2.0 and OpenID Connect implementation?</p>'),
(9, 'Kubernetes vs. Docker Swarm: Which to Choose?', 'active', '<h2>Container Orchestration: Kubernetes vs. Docker Swarm</h2><p>I\'m looking into container orchestration solutions and trying to decide between Kubernetes and Docker Swarm. What are the pros and cons of each?</p><table><tr><th>Kubernetes</th><th>Docker Swarm</th></tr><tr><td>Flexibility</td><td>Simplicity</td></tr><tr><td>Large ecosystem</td><td>Native Docker integration</td></tr></table><p>For those who have used both, in what scenarios would you recommend one over the other?</p>'),
(10, 'Implementing Serverless Functions with AWS Lambda', 'active', '<h1>AWS Lambda and Serverless Architecture</h1><p>I\'m new to serverless architecture and want to start using AWS Lambda. What are some best practices and things to watch out for when developing Lambda functions?</p><ul><li>Function sizing and performance optimization</li><li>Handling cold starts</li><li>Serverless frameworks (e.g., Serverless Framework, AWS SAM)</li><li>Monitoring and debugging Lambda functions</li></ul><p>Has anyone migrated a significant portion of their infrastructure to Lambda? How did it impact your development process and costs?</p>');

INSERT INTO post_files (post_id, file_name)
VALUES
(1, '3cda95bd-ad25-410e-881a-9b8db62717f5.pdf'),
(1, '024255f9-6d3a-45ba-ae17-6c6d1030e068.png'),
(2, '7adb471b-d15d-4b9a-ad21-79070eb10f7f.png'),
(2, '8d470f5c-ede4-45e2-9c8a-83cbeb10b5b2.png'),
(3, '30dee164-42ef-4b49-9921-717a450b5f7d.png'),
(4, '8a08e7b9-c9dc-4d30-975a-547462570fa6.png'),
(5, '7f2e3332-bad4-4978-8ab8-21bb7851b258.png'),
(6, '0549bdce-a192-41cc-b337-38f559c6ce99.jpg'),
(8, 'df78c964-860d-45f8-87bf-a251a814e23f.png'),
(9, '577d7ed2-0a7a-42ea-be25-5fe97ea85c52.png'),
(10, 'c9ed3f8a-8a00-490d-b0eb-a140cee60e8a.png'),
(11, '47d53e7b-4abc-4bae-b517-d19f53a20a5c.png'),
(12, 'f6415990-4d5d-49f2-ae47-3e559215122d.png'),
(12, 'fff705cb-3eb7-4c9a-9467-8f79e915bd49.jpg'),
(13, 'd5c84e0e-0a87-4280-b3fd-a5ce75e138e1.png'),
(15, '5855a11a-0b4d-4b16-9f7b-4d9a2dd10c5e.png');

INSERT INTO categories (title, description)
VALUES
('Programming Languages', 'Discussions about various programming languages, their features, and best practices'),
('Web Development', 'Topics related to frontend and backend web development, frameworks, and tools'),
('Databases', 'Everything about SQL, NoSQL, and data management strategies'),
('Cloud Computing', 'Discussions on cloud platforms, services, and migration strategies'),
('Data Science', 'Topics covering data analysis, machine learning, AI, and related tools'),
('DevOps', 'Best practices, tools, and methodologies for DevOps and automation'),
('Software Architecture', 'Discussions on software design patterns, architectural styles, and system design'),
('Mobile Development', 'Topics related to iOS, Android, and cross-platform mobile app development'),
('Security', 'Cybersecurity, application security, and best practices for secure coding'),
('Performance Optimization', 'Techniques and tools for optimizing software and system performance'),
('Artificial Intelligence', 'Discussions on AI, machine learning, and deep learning technologies'),
('Blockchain', 'Topics related to blockchain technology, cryptocurrencies, and decentralized applications'),
('IoT (Internet of Things)', 'Exploring the world of connected devices and IoT applications'),
('Augmented and Virtual Reality', 'Discussions on AR, VR, and mixed reality technologies'),
('Quantum Computing', 'Exploring the principles and applications of quantum computing'),
('Robotics', 'Topics covering robotics, automation, and related technologies'),
('5G and Wireless Technologies', 'Discussions on 5G, wireless networking, and communication technologies'),
('Edge Computing', 'Exploring edge computing architectures and use cases'),
('Bioinformatics', 'Intersection of biology, computer science, and data analysis'),
('Green Technology', 'Discussions on sustainable and environmentally friendly tech solutions'),
('Cybersecurity', 'Advanced topics in cybersecurity, threat detection, and prevention'),
('Big Data', 'Handling, processing, and analyzing large-scale datasets'),
('Microservices', 'Design, implementation, and management of microservices architectures'),
('Progressive Web Apps', 'Developing modern web applications with native-like capabilities'),
('Serverless Computing', 'Exploring serverless architectures and Function-as-a-Service (FaaS)'),
('GraphQL', 'Discussions on GraphQL APIs, schema design, and client integration'),
('Containerization', 'Topics related to Docker, container orchestration, and best practices'),
('Functional Programming', 'Exploring functional programming paradigms and languages'),
('Low-Code/No-Code Development', 'Platforms and tools for rapid application development'),
('API Design and Management', 'Best practices in API design, versioning, and lifecycle management'),
('Distributed Systems', 'Architectures and challenges in building distributed systems'),
('Natural Language Processing', 'AI techniques for processing and understanding human language'),
('Computer Vision', 'AI applications in image and video analysis'),
('Embedded Systems', 'Development and optimization of embedded software and hardware'),
('Agile and DevOps', 'Methodologies and tools for agile development and DevOps practices'),
('UI/UX Design', 'Principles and techniques for creating effective user interfaces and experiences'),
('Parallel Computing', 'Techniques and technologies for parallel and concurrent processing'),
('Network Security', 'Advanced topics in securing computer networks and communications'),
('Data Visualization', 'Tools and techniques for effectively visualizing complex datasets'),
('Ethical Hacking', 'Exploring cybersecurity from an offensive security perspective');

INSERT INTO posts_categories (post_id, category_id)
VALUES
(1, 1), (1, 5),
(2, 2), (2, 1),
(3, 3),
(4, 1), (4, 10),
(5, 2),
(6, 6), (6, 4),
(8, 1), (8, 3),
(9, 6),
(10, 1), (10, 5),
(11, 3), (11, 10),
(12, 2), (12, 9),
(13, 3),
(14, 1), (14, 7),
(15, 6),
(1, 18), (1, 26),
(2, 14), (2, 26),
(3, 12), (3, 29),
(4, 27), (4, 18),
(5, 14), (5, 26),
(6, 17), (6, 15),
(7, 4), (7, 15),
(8, 12), (8, 21),
(9, 25), (9, 7),
(10, 11), (10, 29),
(12, 20),
(13, 12),
(14, 25),
(15, 25),
(16, 20), (16, 2),
(17, 11), (17, 5),
(18, 13), (18, 21),
(19, 11), (19, 9),
(20, 3), (20, 12),
(21, 17), (21, 6),
(22, 2), (22, 14),
(23, 9), (23, 2),
(24, 15), (24, 4),
(25, 16), (25, 20),
(26, 13), (26, 6),
(27, 11), (27, 5),
(28, 2), (28, 21),
(29, 12), (29, 2),
(30, 25), (30, 7),
(31, 25), (31, 8),
(32, 11), (32, 13),
(33, 2), (33, 14),
(34, 21), (34, 13),
(35, 22), (35, 11),
(36, 26), (36, 2),
(37, 3), (37, 10),
(38, 9), (38, 20),
(39, 17), (39, 6),
(40, 15), (40, 4);

INSERT INTO favorite_posts (user_id, post_id)
VALUES
(1, 2), (1, 5), (1, 8),
(2, 1), (2, 3), (2, 6),
(3, 4), (3, 7), (3, 10),
(5, 11), (5, 13), (5, 14),
(6, 1), (6, 10),
(8, 3), (8, 8), (8, 13),
(9, 4), (9, 9), (9, 14),
(10, 5), (10, 10), (10, 15),
(11, 16), (11, 17), (11, 18),
(12, 19), (12, 20), (12, 21),
(13, 22), (13, 23), (13, 24),
(14, 25), (14, 26), (14, 27),
(15, 28), (15, 29), (15, 30),
(1, 31), (1, 32), (1, 33),
(2, 34), (2, 35), (2, 36),
(3, 37), (3, 38), (3, 39),
(4, 40);

INSERT INTO comments (user_id, post_id, content, status)
VALUES
(2, 1, 'Great question! I\'d recommend working on some real-world projects. Maybe try building a web scraper or a simple API?', 'active'),
(3, 1, 'Codecademy has some excellent Python courses that really helped me level up my skills.', 'active'),
(4, 2, 'As a beginner, I found Vue.js to be the most approachable. The documentation is excellent!', 'active'),
(5, 2, 'React has a steeper learning curve but it\'s widely used in the industry. Might be worth the initial struggle.', 'active'),
(6, 3, 'Think of joins as a way to combine tables based on related columns. Inner joins keep matching rows, left joins keep all rows from the left table, etc.', 'active'),
(7, 3, 'Here\'s a visual explanation that helped me understand joins: [link to visual guide]', 'active'),
(8, 4, 'Make sure you\'re closing resources properly and consider using try-with-resources for automatic resource management.', 'active'),
(9, 4, 'The Java Garbage Collector usually handles memory well, but you might want to look into profiling tools to identify leaks.', 'active'),
(10, 5, 'The official React documentation is actually a great place to start. They have an excellent tutorial.', 'active'),
(1, 5, 'I\'d recommend having a solid understanding of JavaScript, especially ES6 features, before diving into React.', 'active'),
(2, 6, 'Docker is great for creating consistent development environments. It lets you package your app with all its dependencies.', 'active'),
(3, 6, 'I use Docker to ensure my app runs the same way on my machine and in production. It\'s a game-changer for deployment.', 'active'),
(4, 7, 'Cloud computing can significantly reduce upfront infrastructure costs. It\'s great for scalability too.', 'active'),
(5, 7, 'Consider factors like data privacy regulations in your region before moving to the cloud.', 'active'),
(6, 8, 'Think of blockchain as a distributed ledger. Every transaction is recorded and verified by multiple parties, making it very secure.', 'active'),
(7, 8, 'Unlike traditional databases, blockchain is decentralized. No single entity has control over the entire chain.', 'active'),
(8, 9, 'TDD helps catch bugs early in the development process. It also encourages you to write more modular, testable code.', 'inactive'),
(9, 9, 'Start small with unit tests for individual functions. Gradually incorporate TDD into your workflow as you get comfortable with it.', 'active'),
(10, 10, 'NumPy and Pandas are essential for data manipulation. For visualization, start with Matplotlib and Seaborn.', 'inactive'),
(11, 10, 'Don\'t forget about Scikit-learn for machine learning tasks. It\'s a great library to start with.', 'active'),
(12, 11, 'Indexing is crucial for large datasets. Make sure you have appropriate indexes on columns used in WHERE, JOIN, and ORDER BY clauses.', 'active'),
(13, 11, 'Consider partitioning your tables if you\'re dealing with really large amounts of data. It can significantly improve query performance.', 'active'),
(14, 12, 'Always use HTTPS and implement proper authentication. JWT (JSON Web Tokens) is a popular choice for API authentication.', 'active'),
(15, 12, 'Don\'t forget about rate limiting to prevent abuse of your API. Also, validate and sanitize all input to prevent injection attacks.', 'active'),
(1, 13, 'MongoDB is great for flexible, document-based data models. It\'s easier to scale horizontally.', 'inactive'),
(2, 13, 'Cassandra is better for scenarios requiring high write throughput and where data is naturally partitioned.', 'active'),
(3, 14, 'Follow the DRY (Don\'t Repeat Yourself) principle. Extract repeated code into reusable functions or classes.', 'active'),
(4, 14, 'Meaningful variable and function names go a long way in making code readable. Don\'t be afraid of longer, more descriptive names.', 'active'),
(5, 15, 'Jenkins is a popular, open-source CI/CD tool that\'s relatively easy to set up. GitHub Actions is another good option if you\'re using GitHub.', 'active'),
(6, 15, 'Start with automating your build and test processes. Once that\'s stable, you can move on to automated deployments.', 'inactive'),
(11, 16, 'When designing RESTful APIs, always use nouns for resource names and rely on HTTP methods for actions. For example, use POST /users to create a user, not GET /createUser.', 'active'),
(12, 16, 'I highly recommend using tools like Swagger or OpenAPI for documenting your APIs. They make it easy to keep documentation up-to-date and even generate client libraries.', 'active'),
(13, 17, 'Start with the basics of linear algebra and statistics. These are fundamental to understanding many machine learning algorithms.', 'active'),
(14, 17, 'Python is definitely the way to go for machine learning. Start with scikit-learn for classical ML algorithms, then move on to TensorFlow or PyTorch for deep learning.', 'active'),
(15, 18, 'Microservices are great for large, complex applications that need to scale independently. For smaller projects, the overhead of microservices might not be worth it.', 'active'),
(1, 18, 'One big advantage of microservices is the ability to use different technologies for different services. This can be great for adopting new technologies gradually.', 'active'),
(2, 19, 'Always sanitize user inputs to prevent XSS attacks. Libraries like DOMPurify can be really helpful for this.', 'active'),
(3, 19, 'Implement strong password policies and consider using multi-factor authentication for sensitive operations.', 'active'),
(4, 20, 'Proper indexing is crucial for database performance. Analyze your most common queries and create indexes based on those.', 'active'),
(5, 20, 'Consider using database-specific features like PostgreSQL\'s EXPLAIN ANALYZE to understand query performance and optimize accordingly.', 'active'),
(6, 21, 'Multi-stage builds in Docker can significantly reduce your final image size. It\'s a must-learn technique for optimizing Docker workflows.', 'active'),
(7, 21, 'For complex applications, Docker Compose is a lifesaver. It makes managing multi-container applications so much easier.', 'active'),
(8, 22, 'Lazy loading images can have a huge impact on initial page load times, especially for image-heavy sites.', 'active'),
(9, 22, 'Don\'t forget about server-side rendering for improved initial load performance and SEO benefits.', 'active'),
(10, 23, 'JWT (JSON Web Tokens) are great for SPA authentication. Just make sure to store them securely and handle token renewal properly.', 'active'),
(11, 23, 'Consider using OAuth 2.0 with PKCE for secure authentication in SPAs, especially if you\'re dealing with third-party services.', 'active'),
(12, 24, 'One of the biggest advantages of serverless is the potential for cost savings, especially for applications with variable traffic.', 'active'),
(13, 24, 'Cold starts can be a real issue with serverless. Consider keeping your functions "warm" for critical paths in your application.', 'active'),
(14, 25, 'GraphQL is fantastic for mobile applications where bandwidth is a concern. It allows clients to request exactly the data they need.', 'active'),
(15, 25, 'While GraphQL is powerful, REST can be simpler to implement and might be a better choice for smaller projects or when working with external APIs that are already REST-based.', 'active'),
(1, 26, 'Spring Boot is fantastic for building microservices. The Spring Cloud suite provides great tools for service discovery, config management, and more.', 'active'),
(2, 27, 'Containerization is key for ML model deployment. It ensures consistency across development and production environments.', 'active'),
(3, 28, 'Socket.IO is a great library for implementing WebSockets. It provides fallbacks for browsers that don\'t support WebSockets natively.', 'active'),
(4, 29, 'Solidity is the go-to language for Ethereum smart contract development. Definitely worth learning if you\'re interested in blockchain.', 'active'),
(5, 30, 'Automated linting and formatting tools like ESLint and Prettier can greatly improve code review efficiency by catching style issues automatically.', 'active'),
(6, 31, 'Fastlane is an excellent tool for automating iOS and Android deployments. It can save tons of time in the CI/CD process.', 'active'),
(7, 32, 'Implementing a service mesh like Istio can greatly simplify security in a microservices architecture.', 'active'),
(8, 33, 'React.memo and useMemo are powerful tools for optimizing React performance. Just be careful not to overuse them.', 'active'),
(9, 34, 'Apache Kafka is a robust choice for implementing event-driven architectures. It\'s particularly good for high-throughput systems.', 'active'),
(10, 35, 'NLTK and spaCy are two excellent libraries for NLP in Python. spaCy is generally faster, while NLTK has a wider range of algorithms implemented.', 'active');

INSERT INTO comments (user_id, post_id, content, status, parent_comment_id)
VALUES
(1, 1, 'I agree with the previous comments. Also, try contributing to open-source projects. It\'s a great way to learn and get feedback.', 'active', 1),
(2, 2, 'I think starting with Vue.js is a good idea. It\'s simpler and you can always move to React or Angular later.', 'active', 4),
(3, 3, 'Another tip for understanding joins is to practice with real datasets. Try joining tables from a sample database.', 'active', 6),
(4, 4, 'In addition to profiling tools, consider using memory leak detection tools like VisualVM or YourKit.', 'active', 8),
(5, 5, 'Before starting with React, make sure you are comfortable with JavaScript ES6 features like arrow functions, classes, and modules.', 'active', 10),
(6, 6, 'Docker also helps in isolating your application from the host environment, making it easier to manage dependencies.', 'active', 12),
(1, 16, 'Great point about using nouns for resource names. It\'s a common mistake to see verb-based endpoints in RESTful APIs.', 'active', 31),
(2, 17, 'Any specific resources you\'d recommend for learning the math behind machine learning?', 'active', 33),
(3, 18, 'How do you handle data consistency across microservices? That\'s been a challenge for our team.', 'active', 35),
(4, 19, 'DOMPurify is great! We\'ve also had success with the OWASP Java HTML Sanitizer for backend sanitization.', 'active', 37),
(5, 20, 'EXPLAIN ANALYZE is indeed super helpful. For MySQL users, the equivalent EXPLAIN can be just as useful.', 'active', 40),
(11, 26, 'Have you tried Quarkus? It\'s a promising alternative to Spring Boot, especially for microservices.', 'active', 51),
(12, 27, 'Any thoughts on using Kubernetes for orchestrating ML model deployments?', 'active', 52),
(13, 28, 'How do you handle scaling WebSocket connections? We\'ve run into issues with large numbers of concurrent connections.', 'active', 53),
(14, 29, 'Truffle is a great development framework for Ethereum. It makes testing and deploying smart contracts much easier.', 'active', 54),
(15, 30, 'We\'ve found that having a code review checklist helps ensure consistency across reviews. Do you use anything similar?', 'active', 55);

INSERT INTO posts_likes (user_id, post_id, type)
VALUES
(1, 2, 'like'), (1, 3, 'like'), (1, 4, 'like'),
(2, 1, 'like'), (2, 3, 'like'), (2, 5, 'dislike'),
(3, 1, 'like'), (3, 2, 'like'), (3, 4, 'like'),
(4, 2, 'like'), (4, 3, 'dislike'), (4, 5, 'like'), (4, 15, 'dislike'),
(5, 1, 'dislike'), (5, 3, 'like'), (5, 4, 'like'),
(6, 2, 'like'), (6, 4, 'like'),
(7, 1, 'like'), (7, 3, 'like'), (7, 5, 'dislike'),
(8, 2, 'dislike'), (8, 4, 'like'), (8, 5, 'like'),
(9, 1, 'like'), (9, 3, 'like'), (9, 5, 'like'),
(10, 2, 'like'), (10, 4, 'dislike'), (10, 5, 'like'),
(11, 6, 'like'), (11, 7, 'like'), (11, 8, 'dislike'),
(12, 7, 'like'), (12, 8, 'like'), (12, 9, 'like'),
(13, 8, 'dislike'), (13, 9, 'like'), (13, 10, 'like'), (13, 15, 'dislike'),
(14, 9, 'like'), (14, 10, 'like'), (14, 11, 'like'), (14, 15, 'dislike'),
(15, 10, 'like'), (15, 11, 'dislike'), (15, 12, 'like'),
(16, 16, 'like'), (17, 16, 'like'), (18, 16, 'dislike'),
(19, 17, 'like'), (20, 17, 'like'), (21, 17, 'like'),
(22, 18, 'like'), (23, 18, 'dislike'), (24, 18, 'like'),
(25, 19, 'like'), (26, 19, 'like'), (27, 19, 'like'),
(28, 20, 'dislike'), (29, 20, 'like'), (30, 20, 'like'),
(1, 21, 'like'), (2, 21, 'like'), (3, 21, 'dislike'),
(4, 22, 'like'), (5, 22, 'like'), (6, 22, 'like'),
(7, 23, 'dislike'), (8, 23, 'like'), (9, 23, 'like'),
(10, 24, 'like'), (11, 24, 'dislike'), (12, 24, 'like'),
(13, 25, 'like'), (14, 25, 'like'), (15, 25, 'like'),
(16, 26, 'like'), (17, 26, 'dislike'), (18, 26, 'like'),
(19, 27, 'like'), (20, 27, 'like'), (21, 27, 'like'),
(22, 28, 'dislike'), (23, 28, 'like'), (24, 28, 'like'),
(25, 29, 'like'), (26, 29, 'like'), (27, 29, 'dislike'),
(28, 30, 'like'), (29, 30, 'like'), (30, 30, 'like');

INSERT INTO comment_likes (user_id, comment_id, type)
VALUES
(1, 1, 'like'), (1, 2, 'like'), (1, 3, 'dislike'),
(2, 2, 'like'), (2, 3, 'like'), (2, 4, 'like'),
(3, 1, 'dislike'), (3, 3, 'like'), (3, 5, 'like'),
(4, 2, 'like'), (4, 4, 'like'), (4, 6, 'like'),
(5, 3, 'like'), (5, 5, 'dislike'), (5, 7, 'like'),
(6, 4, 'like'), (6, 6, 'like'), (6, 8, 'like'),
(7, 5, 'like'), (7, 7, 'like'), (7, 9, 'dislike'),
(8, 6, 'dislike'), (8, 8, 'like'), (8, 10, 'like'),
(9, 7, 'like'), (9, 9, 'like'), (9, 11, 'like'),
(10, 8, 'like'), (10, 10, 'dislike'), (10, 12, 'like'),
(11, 9, 'like'), (11, 11, 'like'), (11, 13, 'like'),
(12, 10, 'like'), (12, 12, 'like'), (12, 14, 'dislike'),
(13, 11, 'dislike'), (13, 13, 'like'), (13, 15, 'like'),
(14, 12, 'like'), (14, 14, 'like'), (14, 16, 'like'),
(15, 13, 'like'), (15, 15, 'dislike'), (15, 17, 'like'),
(16, 31, 'like'), (17, 31, 'like'), (18, 31, 'dislike'),
(19, 32, 'like'), (20, 32, 'like'), (21, 32, 'like'),
(22, 33, 'like'), (23, 33, 'dislike'), (24, 33, 'like'),
(25, 34, 'like'), (26, 34, 'like'), (27, 34, 'like'),
(28, 35, 'dislike'), (29, 35, 'like'), (30, 35, 'like'),
(1, 36, 'like'), (2, 36, 'like'), (3, 36, 'dislike'),
(4, 37, 'like'), (5, 37, 'like'), (6, 37, 'like'),
(7, 38, 'dislike'), (8, 38, 'like'), (9, 38, 'like'),
(10, 39, 'like'), (11, 39, 'dislike'), (12, 39, 'like'),
(13, 40, 'like'), (14, 40, 'like'), (15, 40, 'like'),
(16, 41, 'like'), (17, 41, 'like'), (18, 41, 'dislike'),
(19, 42, 'like'), (20, 42, 'like'), (21, 42, 'like'),
(22, 43, 'like'), (23, 43, 'dislike'), (24, 43, 'like'),
(25, 44, 'like'), (26, 44, 'like'), (27, 44, 'like'),
(28, 45, 'dislike'), (29, 45, 'like'), (30, 45, 'like');

